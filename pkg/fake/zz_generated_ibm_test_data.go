// Code generated by IBM test data generator. DO NOT EDIT.
/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package fake

import (
	"github.com/IBM/go-sdk-core/v5/core"
	"github.com/IBM/vpc-go-sdk/vpcv1"
)

// IBMInstanceProfiles provides comprehensive test data for IBM Cloud instance profiles
// Generated from actual IBM Cloud API responses
var IBMInstanceProfiles = []vpcv1.InstanceProfile{
	// General Purpose profiles
	{
		Name: core.StringPtr("bx2-2x8"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(2),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(8),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(4000),
		},
		Family: core.StringPtr("balanced"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/bx2-2x8"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
	},
	{
		Name: core.StringPtr("bx2-4x16"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(4),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(16),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(8000),
		},
		Family: core.StringPtr("balanced"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/bx2-4x16"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
	},
	{
		Name: core.StringPtr("bx2-8x32"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(8),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(32),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(16000),
		},
		Family: core.StringPtr("balanced"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/bx2-8x32"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
	},

	// Compute Optimized profiles
	{
		Name: core.StringPtr("cx2-2x4"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(2),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(4),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(4000),
		},
		Family: core.StringPtr("compute"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/cx2-2x4"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
	},
	{
		Name: core.StringPtr("cx2-4x8"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(4),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(8),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(8000),
		},
		Family: core.StringPtr("compute"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/cx2-4x8"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
	},

	// Memory Optimized profiles
	{
		Name: core.StringPtr("mx2-2x16"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(2),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(16),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(4000),
		},
		Family: core.StringPtr("memory"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/mx2-2x16"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
	},
	{
		Name: core.StringPtr("mx2-4x32"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(4),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(32),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(8000),
		},
		Family: core.StringPtr("memory"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/mx2-4x32"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
	},

	// GPU profiles
	{
		Name: core.StringPtr("gx2-8x64x1v100"),
		VcpuArchitecture: &vpcv1.InstanceProfileVcpuArchitecture{
			Type:  core.StringPtr("fixed"),
			Value: core.StringPtr("amd64"),
		},
		VcpuCount: &vpcv1.InstanceProfileVcpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(8),
		},
		Memory: &vpcv1.InstanceProfileMemory{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(64),
		},
		Bandwidth: &vpcv1.InstanceProfileBandwidth{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(16000),
		},
		Family: core.StringPtr("gpu"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/instance/profiles/gx2-8x64x1v100"),
		OsArchitecture: &vpcv1.InstanceProfileOsArchitecture{
			Type:   core.StringPtr("enum"),
			Values: []string{"amd64"},
		},
		GpuCount: &vpcv1.InstanceProfileGpu{
			Type:  core.StringPtr("fixed"),
			Value: core.Int64Ptr(1),
		},
		GpuModel: &vpcv1.InstanceProfileGpuModel{
			Type:   core.StringPtr("fixed"),
			Values: []string{"NVIDIA_TESLA_V100"},
		},
	},
}

// IBMSubnets provides test data for subnets in different zones
var IBMSubnets = []vpcv1.Subnet{
	{
		ID:                        core.StringPtr("subnet-us-south-1"),
		Name:                      core.StringPtr("test-subnet-us-south-1"),
		Zone:                      &vpcv1.ZoneReference{Name: core.StringPtr("us-south-1")},
		VPC:                       &vpcv1.VPCReference{ID: core.StringPtr("vpc-test")},
		TotalIpv4AddressCount:     core.Int64Ptr(256),
		AvailableIpv4AddressCount: core.Int64Ptr(250),
		Status:                    core.StringPtr("available"),
		IPVersion:                 core.StringPtr("ipv4"),
		CRN:                       core.StringPtr("crn:v1:bluemix:public:is:us-south-1:a/account::subnet:subnet-us-south-1"),
		Href:                      core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/subnets/subnet-us-south-1"),
	},
	{
		ID:                        core.StringPtr("subnet-us-south-2"),
		Name:                      core.StringPtr("test-subnet-us-south-2"),
		Zone:                      &vpcv1.ZoneReference{Name: core.StringPtr("us-south-2")},
		VPC:                       &vpcv1.VPCReference{ID: core.StringPtr("vpc-test")},
		TotalIpv4AddressCount:     core.Int64Ptr(256),
		AvailableIpv4AddressCount: core.Int64Ptr(240),
		Status:                    core.StringPtr("available"),
		IPVersion:                 core.StringPtr("ipv4"),
		CRN:                       core.StringPtr("crn:v1:bluemix:public:is:us-south-2:a/account::subnet:subnet-us-south-2"),
		Href:                      core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/subnets/subnet-us-south-2"),
	},
	{
		ID:                        core.StringPtr("subnet-us-south-3"),
		Name:                      core.StringPtr("test-subnet-us-south-3"),
		Zone:                      &vpcv1.ZoneReference{Name: core.StringPtr("us-south-3")},
		VPC:                       &vpcv1.VPCReference{ID: core.StringPtr("vpc-test")},
		TotalIpv4AddressCount:     core.Int64Ptr(256),
		AvailableIpv4AddressCount: core.Int64Ptr(200),
		Status:                    core.StringPtr("available"),
		IPVersion:                 core.StringPtr("ipv4"),
		CRN:                       core.StringPtr("crn:v1:bluemix:public:is:us-south-3:a/account::subnet:subnet-us-south-3"),
		Href:                      core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/subnets/subnet-us-south-3"),
	},
}

// IBMZones provides test data for availability zones
var IBMZones = []vpcv1.Zone{
	{
		Name:   core.StringPtr("us-south-1"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-1"),
		Status: core.StringPtr("available"),
		Region: &vpcv1.RegionReference{
			Name: core.StringPtr("us-south"),
			Href: core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/regions/us-south"),
		},
	},
	{
		Name:   core.StringPtr("us-south-2"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-2"),
		Status: core.StringPtr("available"),
		Region: &vpcv1.RegionReference{
			Name: core.StringPtr("us-south"),
			Href: core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/regions/us-south"),
		},
	},
	{
		Name:   core.StringPtr("us-south-3"),
		Href:   core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/regions/us-south/zones/us-south-3"),
		Status: core.StringPtr("available"),
		Region: &vpcv1.RegionReference{
			Name: core.StringPtr("us-south"),
			Href: core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/regions/us-south"),
		},
	},
}

// IBMImages provides test data for common operating system images
var IBMImages = []vpcv1.Image{
	{
		ID:              core.StringPtr("r006-ubuntu-20-04-minimal-amd64-3"),
		Name:            core.StringPtr("ibm-ubuntu-20-04-minimal-amd64-3"),
		OperatingSystem: &vpcv1.OperatingSystem{Name: core.StringPtr("ubuntu-20-04-amd64")},
		Status:          core.StringPtr("available"),
		Visibility:      core.StringPtr("public"),
		CRN:             core.StringPtr("crn:v1:bluemix:public:is:us-south:a/account::image:r006-ubuntu-20-04-minimal-amd64-3"),
		Href:            core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/images/r006-ubuntu-20-04-minimal-amd64-3"),
	},
	{
		ID:              core.StringPtr("r006-ubuntu-22-04-minimal-amd64-1"),
		Name:            core.StringPtr("ibm-ubuntu-22-04-minimal-amd64-1"),
		OperatingSystem: &vpcv1.OperatingSystem{Name: core.StringPtr("ubuntu-22-04-amd64")},
		Status:          core.StringPtr("available"),
		Visibility:      core.StringPtr("public"),
		CRN:             core.StringPtr("crn:v1:bluemix:public:is:us-south:a/account::image:r006-ubuntu-22-04-minimal-amd64-1"),
		Href:            core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/images/r006-ubuntu-22-04-minimal-amd64-1"),
	},
	{
		ID:              core.StringPtr("r006-centos-8-amd64-5"),
		Name:            core.StringPtr("ibm-centos-8-minimal-amd64-5"),
		OperatingSystem: &vpcv1.OperatingSystem{Name: core.StringPtr("centos-8-amd64")},
		Status:          core.StringPtr("available"),
		Visibility:      core.StringPtr("public"),
		CRN:             core.StringPtr("crn:v1:bluemix:public:is:us-south:a/account::image:r006-centos-8-amd64-5"),
		Href:            core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/images/r006-centos-8-amd64-5"),
	},
	{
		ID:              core.StringPtr("r006-rhel-8-amd64-7"),
		Name:            core.StringPtr("ibm-redhat-8-minimal-amd64-7"),
		OperatingSystem: &vpcv1.OperatingSystem{Name: core.StringPtr("red-8-amd64")},
		Status:          core.StringPtr("available"),
		Visibility:      core.StringPtr("public"),
		CRN:             core.StringPtr("crn:v1:bluemix:public:is:us-south:a/account::image:r006-rhel-8-amd64-7"),
		Href:            core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/images/r006-rhel-8-amd64-7"),
	},
}

// IBMSecurityGroups provides test data for security groups
var IBMSecurityGroups = []vpcv1.SecurityGroup{
	{
		ID:   core.StringPtr("sg-default"),
		Name: core.StringPtr("default-security-group"),
		VPC:  &vpcv1.VPCReference{ID: core.StringPtr("vpc-test")},
		Rules: []vpcv1.SecurityGroupRuleIntf{
			&vpcv1.SecurityGroupRuleSecurityGroupRuleProtocolAll{
				ID:        core.StringPtr("rule-inbound-all"),
				Direction: core.StringPtr("inbound"),
				Protocol:  core.StringPtr("all"),
				Remote: &vpcv1.SecurityGroupRuleRemote{
					ID: core.StringPtr("sg-default"),
				},
			},
			&vpcv1.SecurityGroupRuleSecurityGroupRuleProtocolAll{
				ID:        core.StringPtr("rule-outbound-all"),
				Direction: core.StringPtr("outbound"),
				Protocol:  core.StringPtr("all"),
				Remote: &vpcv1.SecurityGroupRuleRemote{
					CIDRBlock: core.StringPtr("0.0.0.0/0"),
				},
			},
		},
		CRN:  core.StringPtr("crn:v1:bluemix:public:is:us-south:a/account::security-group:sg-default"),
		Href: core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/security_groups/sg-default"),
	},
	{
		ID:   core.StringPtr("sg-kubernetes"),
		Name: core.StringPtr("kubernetes-security-group"),
		VPC:  &vpcv1.VPCReference{ID: core.StringPtr("vpc-test")},
		Rules: []vpcv1.SecurityGroupRuleIntf{
			&vpcv1.SecurityGroupRuleSecurityGroupRuleProtocolTcpudp{
				ID:        core.StringPtr("rule-kube-api"),
				Direction: core.StringPtr("inbound"),
				Protocol:  core.StringPtr("tcp"),
				PortMin:   core.Int64Ptr(6443),
				PortMax:   core.Int64Ptr(6443),
				Remote: &vpcv1.SecurityGroupRuleRemote{
					CIDRBlock: core.StringPtr("10.0.0.0/8"),
				},
			},
			&vpcv1.SecurityGroupRuleSecurityGroupRuleProtocolTcpudp{
				ID:        core.StringPtr("rule-kubelet"),
				Direction: core.StringPtr("inbound"),
				Protocol:  core.StringPtr("tcp"),
				PortMin:   core.Int64Ptr(10250),
				PortMax:   core.Int64Ptr(10250),
				Remote: &vpcv1.SecurityGroupRuleRemote{
					CIDRBlock: core.StringPtr("10.0.0.0/8"),
				},
			},
		},
		CRN:  core.StringPtr("crn:v1:bluemix:public:is:us-south:a/account::security-group:sg-kubernetes"),
		Href: core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/security_groups/sg-kubernetes"),
	},
}

// IBMSSHKeys provides test data for SSH keys
var IBMSSHKeys = []vpcv1.Key{
	{
		ID:          core.StringPtr("key-12345"),
		Name:        core.StringPtr("test-ssh-key"),
		Type:        core.StringPtr("rsa"),
		PublicKey:   core.StringPtr("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTest..."),
		Fingerprint: core.StringPtr("SHA256:abcdef1234567890"),
		CRN:         core.StringPtr("crn:v1:bluemix:public:is:us-south:a/account::key:key-12345"),
		Href:        core.StringPtr("https://us-south.iaas.cloud.ibm.com/v1/keys/key-12345"),
	},
}

// IBMInstancePricing provides test pricing data for instance types (per hour in USD)
var IBMInstancePricing = map[string]map[string]float64{
	"us-south": {
		"bx2-2x8":        0.096,
		"bx2-4x16":       0.192,
		"bx2-8x32":       0.384,
		"cx2-2x4":        0.084,
		"cx2-4x8":        0.168,
		"mx2-2x16":       0.144,
		"mx2-4x32":       0.288,
		"gx2-8x64x1v100": 2.155,
	},
	"us-east": {
		"bx2-2x8":        0.096,
		"bx2-4x16":       0.192,
		"bx2-8x32":       0.384,
		"cx2-2x4":        0.084,
		"cx2-4x8":        0.168,
		"mx2-2x16":       0.144,
		"mx2-4x32":       0.288,
		"gx2-8x64x1v100": 2.155,
	},
	"eu-de": {
		"bx2-2x8":        0.104,
		"bx2-4x16":       0.208,
		"bx2-8x32":       0.416,
		"cx2-2x4":        0.091,
		"cx2-4x8":        0.182,
		"mx2-2x16":       0.156,
		"mx2-4x32":       0.312,
		"gx2-8x64x1v100": 2.336,
	},
}
